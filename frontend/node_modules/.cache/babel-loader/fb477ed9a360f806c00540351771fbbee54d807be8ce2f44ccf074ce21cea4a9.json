{"ast":null,"code":"var _jsxFileName = \"/Users/maciejjanowski/IdeaProjects/reservationSystem/reservationSystem/frontend/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport '../styles/loginAndRegister.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPwd, setShowPwd] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const navigate = useNavigate();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setErrorMsg(\"\");\n    setSubmitting(true);\n    try {\n      const res = await fetch(\"http://localhost:8080/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (res.ok) {\n        navigate(\"/myaccount\");\n      } else {\n        // Backend może zwrócić JSON lub tekst\n        let msg = \"Registrierung fehlgeschlagen.\";\n        try {\n          const data = await res.json();\n          msg = data.message || msg;\n        } catch {\n          const text = await res.text();\n          msg = text || msg;\n        }\n        setErrorMsg(msg);\n      }\n    } catch (err) {\n      setErrorMsg(err.message || \"Ein Fehler ist aufgetreten.\");\n    } finally {\n      setSubmitting(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"auth-page\",\n    \"aria-label\": \"Registrierung\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth-card\",\n      \"aria-labelledby\": \"register-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"register-title\",\n        className: \"auth-title\",\n        children: \"Registrieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-alert\",\n        role: \"alert\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Benutzername\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            autoComplete: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            minLength: 3,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Passwort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pwd-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: showPwd ? \"text\" : \"password\",\n              autoComplete: \"new-password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              minLength: 6,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"pwd-toggle\",\n              onClick: () => setShowPwd(v => !v),\n              \"aria-label\": showPwd ? \"Passwort verbergen\" : \"Passwort anzeigen\",\n              children: showPwd ? \"Verbergen\" : \"Anzeigen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-btn\",\n          type: \"submit\",\n          disabled: submitting,\n          children: [submitting ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 39\n          }, this) : null, submitting ? \"Wird registriert…\" : \"Registrieren\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-meta\",\n        children: [\"Bereits ein Konto?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"auth-link\",\n          children: \"Jetzt einloggen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"suYS9A8SkczYxyn2tgdTyROY888=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Link","useNavigate","useState","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","showPwd","setShowPwd","submitting","setSubmitting","errorMsg","setErrorMsg","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","credentials","body","JSON","stringify","ok","msg","data","json","message","text","err","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","noValidate","htmlFor","type","autoComplete","value","onChange","target","minLength","required","onClick","v","disabled","to","_c","$RefreshReg$"],"sources":["/Users/maciejjanowski/IdeaProjects/reservationSystem/reservationSystem/frontend/src/pages/Register.jsx"],"sourcesContent":["import '../styles/loginAndRegister.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction Register() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPwd, setShowPwd] = useState(false);\n    const [submitting, setSubmitting] = useState(false);\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const navigate = useNavigate();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        setErrorMsg(\"\");\n        setSubmitting(true);\n\n        try {\n            const res = await fetch(\"http://localhost:8080/auth/register\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify({ username, password }),\n            });\n\n            if (res.ok) {\n                navigate(\"/myaccount\");\n            } else {\n                // Backend może zwrócić JSON lub tekst\n                let msg = \"Registrierung fehlgeschlagen.\";\n                try {\n                    const data = await res.json();\n                    msg = data.message || msg;\n                } catch {\n                    const text = await res.text();\n                    msg = text || msg;\n                }\n                setErrorMsg(msg);\n            }\n        } catch (err) {\n            setErrorMsg(err.message || \"Ein Fehler ist aufgetreten.\");\n        } finally {\n            setSubmitting(false);\n        }\n    }\n\n    return (\n        <main className=\"auth-page\" aria-label=\"Registrierung\">\n            <section className=\"auth-card\" aria-labelledby=\"register-title\">\n                <h1 id=\"register-title\" className=\"auth-title\">Registrieren</h1>\n\n                {errorMsg && (\n                    <div className=\"auth-alert\" role=\"alert\">\n                        {errorMsg}\n                    </div>\n                )}\n\n                <form className=\"auth-form\" onSubmit={handleSubmit} noValidate>\n                    <div className=\"field\">\n                        <label htmlFor=\"username\">Benutzername</label>\n                        <input\n                            id=\"username\"\n                            type=\"text\"\n                            autoComplete=\"username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            minLength={3}\n                            required\n                        />\n                    </div>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"password\">Passwort</label>\n                        <div className=\"pwd-wrap\">\n                            <input\n                                id=\"password\"\n                                type={showPwd ? \"text\" : \"password\"}\n                                autoComplete=\"new-password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                minLength={6}\n                                required\n                            />\n                            <button\n                                type=\"button\"\n                                className=\"pwd-toggle\"\n                                onClick={() => setShowPwd(v => !v)}\n                                aria-label={showPwd ? \"Passwort verbergen\" : \"Passwort anzeigen\"}\n                            >\n                                {showPwd ? \"Verbergen\" : \"Anzeigen\"}\n                            </button>\n                        </div>\n                    </div>\n\n                    <button className=\"auth-btn\" type=\"submit\" disabled={submitting}>\n                        {submitting ? <span className=\"spinner\" aria-hidden=\"true\" /> : null}\n                        {submitting ? \"Wird registriert…\" : \"Registrieren\"}\n                    </button>\n                </form>\n\n                <p className=\"auth-meta\">\n                    Bereits ein Konto?{\" \"}\n                    <Link to=\"/login\" className=\"auth-link\">Jetzt einloggen</Link>\n                </p>\n            </section>\n        </main>\n    );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}