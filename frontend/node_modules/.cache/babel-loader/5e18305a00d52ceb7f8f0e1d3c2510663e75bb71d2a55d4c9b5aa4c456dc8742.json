{"ast":null,"code":"var _jsxFileName = \"/Users/maciejjanowski/Desktop/reservationSystem/frontend/src/components/ReservationForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/newreservation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReservationForm({\n  setReservation\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [tableNumber, setTableNumber] = useState(\"\");\n  const [availableTables, setAvailableTables] = useState([]);\n  const navigate = useNavigate();\n\n  // Pobieranie dostępnych stolików na podstawie startTime (+2h automatycznie)\n  useEffect(() => {\n    const fetchAvailableTables = async () => {\n      if (!startTime) return;\n\n      // wyliczamy endTime lokalnie, żeby wysłać zapytanie o dostępność\n      const start = new Date(startTime);\n      const end = new Date(start.getTime() + 2 * 60 * 60 * 1000); // +2h\n\n      try {\n        const res = await fetch(`http://localhost:8080/api/reservations/available?start=${start.toISOString()}&end=${end.toISOString()}`, {\n          credentials: \"include\"\n        });\n        if (!res.ok) throw new Error(\"Fehler beim Laden der verfügbaren Tische\");\n        const data = await res.json();\n        setAvailableTables(data);\n      } catch (err) {\n        console.error(\"Fehler beim Abrufen:\", err);\n        setAvailableTables([]);\n      }\n    };\n    fetchAvailableTables();\n  }, [startTime]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newReservation = {\n      tableNumber,\n      reservation: {\n        name,\n        email,\n        phone,\n        startTime\n      }\n      // endTime NIE wysyłamy – backend ustawi +2h\n    };\n    try {\n      const response = await fetch(\"http://localhost:8080/api/reservations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(newReservation)\n      });\n      if (!response.ok) throw new Error(\"Fehler beim Senden der Reservierung\");\n      const data = await response.json();\n      setReservation([data]);\n\n      // Reset formularza\n      setName(\"\");\n      setEmail(\"\");\n      setPhone(\"\");\n      setStartTime(\"\");\n      setTableNumber(\"\");\n      navigate(\"/reservations/my\");\n    } catch (err) {\n      console.error(\"Fehler beim Hinzufügen:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"reservation-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"E-Mail\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      placeholder: \"Telefonnummer\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      value: startTime,\n      onChange: e => setStartTime(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: tableNumber,\n      onChange: e => setTableNumber(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"W\\xE4hle einen Tisch...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), availableTables.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: t.tableNumber,\n        children: [\"Tisch \", t.tableNumber, \" (\", t.numberOfSeats, \" Personen)\"]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reservieren\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ReservationForm, \"fyxPDXKx1+CTeotDIct4/1oqEsw=\", false, function () {\n  return [useNavigate];\n});\n_c = ReservationForm;\nexport default ReservationForm;\nvar _c;\n$RefreshReg$(_c, \"ReservationForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","ReservationForm","setReservation","_s","name","setName","email","setEmail","phone","setPhone","startTime","setStartTime","tableNumber","setTableNumber","availableTables","setAvailableTables","navigate","fetchAvailableTables","start","Date","end","getTime","res","fetch","toISOString","credentials","ok","Error","data","json","err","console","error","handleSubmit","e","preventDefault","newReservation","reservation","response","method","headers","body","JSON","stringify","onSubmit","className","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","map","t","numberOfSeats","id","_c","$RefreshReg$"],"sources":["/Users/maciejjanowski/Desktop/reservationSystem/frontend/src/components/ReservationForm.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/newreservation.css\";\n\nfunction ReservationForm({ setReservation }) {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [startTime, setStartTime] = useState(\"\");\n    const [tableNumber, setTableNumber] = useState(\"\");\n    const [availableTables, setAvailableTables] = useState([]);\n\n    const navigate = useNavigate();\n\n    // Pobieranie dostępnych stolików na podstawie startTime (+2h automatycznie)\n    useEffect(() => {\n        const fetchAvailableTables = async () => {\n            if (!startTime) return;\n\n            // wyliczamy endTime lokalnie, żeby wysłać zapytanie o dostępność\n            const start = new Date(startTime);\n            const end = new Date(start.getTime() + 2 * 60 * 60 * 1000); // +2h\n\n            try {\n                const res = await fetch(\n                    `http://localhost:8080/api/reservations/available?start=${start.toISOString()}&end=${end.toISOString()}`,\n                    { credentials: \"include\" }\n                );\n                if (!res.ok) throw new Error(\"Fehler beim Laden der verfügbaren Tische\");\n\n                const data = await res.json();\n                setAvailableTables(data);\n            } catch (err) {\n                console.error(\"Fehler beim Abrufen:\", err);\n                setAvailableTables([]);\n            }\n        };\n\n        fetchAvailableTables();\n    }, [startTime]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const newReservation = {\n            tableNumber,\n            reservation: { name, email, phone, startTime }\n            // endTime NIE wysyłamy – backend ustawi +2h\n        };\n\n        try {\n            const response = await fetch(\"http://localhost:8080/api/reservations\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(newReservation),\n            });\n\n            if (!response.ok) throw new Error(\"Fehler beim Senden der Reservierung\");\n\n            const data = await response.json();\n            setReservation([data]);\n\n            // Reset formularza\n            setName(\"\");\n            setEmail(\"\");\n            setPhone(\"\");\n            setStartTime(\"\");\n            setTableNumber(\"\");\n\n            navigate(\"/reservations/my\");\n        } catch (err) {\n            console.error(\"Fehler beim Hinzufügen:\", err);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"reservation-form\">\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"email\"\n                placeholder=\"E-Mail\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"tel\"\n                placeholder=\"Telefonnummer\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                required\n            />\n\n            {/* tylko startTime, endTime backend ustawi automatycznie */}\n            <input\n                type=\"datetime-local\"\n                value={startTime}\n                onChange={(e) => setStartTime(e.target.value)}\n                required\n            />\n\n            <select\n                value={tableNumber}\n                onChange={(e) => setTableNumber(e.target.value)}\n                required\n            >\n                <option value=\"\">Wähle einen Tisch...</option>\n                {availableTables.map((t) => (\n                    <option key={t.id} value={t.tableNumber}>\n                        Tisch {t.tableNumber} ({t.numberOfSeats} Personen)\n                    </option>\n                ))}\n            </select>\n\n            <button type=\"submit\">Reservieren</button>\n        </form>\n    );\n}\n\nexport default ReservationForm;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,eAAeA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMoB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMoB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACP,SAAS,EAAE;;MAEhB;MACA,MAAMQ,KAAK,GAAG,IAAIC,IAAI,CAACT,SAAS,CAAC;MACjC,MAAMU,GAAG,GAAG,IAAID,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;MAE5D,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACnB,0DAA0DL,KAAK,CAACM,WAAW,CAAC,CAAC,QAAQJ,GAAG,CAACI,WAAW,CAAC,CAAC,EAAE,EACxG;UAAEC,WAAW,EAAE;QAAU,CAC7B,CAAC;QACD,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;QAExE,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC7Bd,kBAAkB,CAACa,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;QAC1Cf,kBAAkB,CAAC,EAAE,CAAC;MAC1B;IACJ,CAAC;IAEDE,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,MAAMuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,cAAc,GAAG;MACnBxB,WAAW;MACXyB,WAAW,EAAE;QAAEjC,IAAI;QAAEE,KAAK;QAAEE,KAAK;QAAEE;MAAU;MAC7C;IACJ,CAAC;IAED,IAAI;MACA,MAAM4B,QAAQ,GAAG,MAAMf,KAAK,CAAC,wCAAwC,EAAE;QACnEgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/Cf,WAAW,EAAE,SAAS;QACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,cAAc;MACvC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACZ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAExE,MAAMC,IAAI,GAAG,MAAMU,QAAQ,CAACT,IAAI,CAAC,CAAC;MAClC3B,cAAc,CAAC,CAAC0B,IAAI,CAAC,CAAC;;MAEtB;MACAvB,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;MACZE,YAAY,CAAC,EAAE,CAAC;MAChBE,cAAc,CAAC,EAAE,CAAC;MAElBG,QAAQ,CAAC,kBAAkB,CAAC;IAChC,CAAC,CAAC,OAAOc,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IACjD;EACJ,CAAC;EAED,oBACI9B,OAAA;IAAM4C,QAAQ,EAAEX,YAAa;IAACY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACtD9C,OAAA;MACI+C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAE7C,IAAK;MACZ8C,QAAQ,EAAGhB,CAAC,IAAK7B,OAAO,CAAC6B,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAEFxD,OAAA;MACI+C,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAE3C,KAAM;MACb4C,QAAQ,EAAGhB,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAEFxD,OAAA;MACI+C,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAEzC,KAAM;MACb0C,QAAQ,EAAGhB,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAGFxD,OAAA;MACI+C,IAAI,EAAC,gBAAgB;MACrBE,KAAK,EAAEvC,SAAU;MACjBwC,QAAQ,EAAGhB,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC9CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAEFxD,OAAA;MACIiD,KAAK,EAAErC,WAAY;MACnBsC,QAAQ,EAAGhB,CAAC,IAAKrB,cAAc,CAACqB,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAChDG,QAAQ;MAAAN,QAAA,gBAER9C,OAAA;QAAQiD,KAAK,EAAC,EAAE;QAAAH,QAAA,EAAC;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7C1C,eAAe,CAAC2C,GAAG,CAAEC,CAAC,iBACnB1D,OAAA;QAAmBiD,KAAK,EAAES,CAAC,CAAC9C,WAAY;QAAAkC,QAAA,GAAC,QAC/B,EAACY,CAAC,CAAC9C,WAAW,EAAC,IAAE,EAAC8C,CAAC,CAACC,aAAa,EAAC,YAC5C;MAAA,GAFaD,CAAC,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAETxD,OAAA;MAAQ+C,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf;AAACrD,EAAA,CA1HQF,eAAe;EAAA,QAQHH,WAAW;AAAA;AAAA+D,EAAA,GARvB5D,eAAe;AA4HxB,eAAeA,eAAe;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}