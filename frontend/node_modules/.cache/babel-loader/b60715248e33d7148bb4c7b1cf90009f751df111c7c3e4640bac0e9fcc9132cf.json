{"ast":null,"code":"var _jsxFileName = \"/Users/maciejjanowski/IdeaProjects/reservationSystem/reservationSystem/frontend/src/components/Validation.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from 'react';\n\n// Komponente zum Schutz von Seiten, die nur für authentifizierte Nutzer:innen zugänglich sind.\n// Gibt das Kind-Element mit Benutzerinformationen weiter (username, role)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Validation({\n  children\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true); // Status: wird Authentifizierung geprüft?\n  const [authorized, setAuthorized] = useState(false); // Ist der Benutzer eingeloggt?\n  const [username, setUsername] = useState(\"\"); // Benutzername (falls eingeloggt)\n  const [role, setRole] = useState(\"\"); // Rolle: \"ROLE_User\",  \"ROLE_ADMIN\"\n\n  useEffect(() => {\n    let isMounted = true; // Schutz gegen Memory-Leaks bei unmount\n\n    const checkAuth = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/auth/auth_check', {\n          method: 'GET',\n          credentials: 'include' // JWT-Cookie wird gesendet\n        });\n        if (!isMounted) return;\n        if (res.ok) {\n          const data = await res.json();\n          setUsername(data.username);\n          setRole(data.role);\n          setAuthorized(true);\n        } else {\n          setAuthorized(false);\n        }\n      } catch (err) {\n        setAuthorized(false);\n      } finally {\n        if (isMounted) setIsLoading(false); // Auth-Prüfung abgeschlossen\n      }\n    };\n    checkAuth();\n\n    // Cleanup bei Komponentendemontage\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  // Während der Authentifizierungsprüfung\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Authentifizierung wird \\xFCberpr\\xFCft...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 27\n  }, this);\n\n  // Wenn autorisiert → Kindkomponente mit zusätzlichen Props zurückgeben\n  return authorized && username ? /*#__PURE__*/React.cloneElement(children, {\n    username,\n    role\n  }) : null; // sonst nichts anzeigen\n}\n_s(Validation, \"Fre88Dd8Pr8+3BelbfFHTur/NRc=\", false, function () {\n  return [useNavigate];\n});\n_c = Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["useState","useEffect","useNavigate","React","jsxDEV","_jsxDEV","Validation","children","_s","navigate","isLoading","setIsLoading","authorized","setAuthorized","username","setUsername","role","setRole","isMounted","checkAuth","res","fetch","method","credentials","ok","data","json","err","fileName","_jsxFileName","lineNumber","columnNumber","cloneElement","_c","$RefreshReg$"],"sources":["/Users/maciejjanowski/IdeaProjects/reservationSystem/reservationSystem/frontend/src/components/Validation.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from 'react';\n\n// Komponente zum Schutz von Seiten, die nur für authentifizierte Nutzer:innen zugänglich sind.\n// Gibt das Kind-Element mit Benutzerinformationen weiter (username, role)\n\nexport default function Validation({ children }) {\n    const navigate = useNavigate();\n\n    const [isLoading, setIsLoading] = useState(true); // Status: wird Authentifizierung geprüft?\n    const [authorized, setAuthorized] = useState(false); // Ist der Benutzer eingeloggt?\n    const [username, setUsername] = useState(\"\"); // Benutzername (falls eingeloggt)\n    const [role, setRole] = useState(\"\"); // Rolle: \"ROLE_User\",  \"ROLE_ADMIN\"\n\n    useEffect(() => {\n        let isMounted = true; // Schutz gegen Memory-Leaks bei unmount\n\n        const checkAuth = async () => {\n            try {\n                const res = await fetch('http://localhost:8080/auth/auth_check', {\n                    method: 'GET',\n                    credentials: 'include', // JWT-Cookie wird gesendet\n                });\n\n                if (!isMounted) return;\n\n                if (res.ok) {\n                    const data = await res.json();\n                    setUsername(data.username);\n                    setRole(data.role);\n                    setAuthorized(true);\n                } else {\n                    setAuthorized(false);\n                }\n            } catch (err) {\n                setAuthorized(false);\n            } finally {\n                if (isMounted) setIsLoading(false); // Auth-Prüfung abgeschlossen\n            }\n        };\n\n        checkAuth();\n\n        // Cleanup bei Komponentendemontage\n        return () => {\n            isMounted = false;\n        };\n    }, []);\n\n    // Während der Authentifizierungsprüfung\n    if (isLoading) return <p>Authentifizierung wird überprüft...</p>;\n\n    // Wenn autorisiert → Kindkomponente mit zusätzlichen Props zurückgeben\n    return authorized && username\n        ? React.cloneElement(children, { username, role })\n        : null; // sonst nichts anzeigen\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCC,SAAS,CAAC,MAAM;IACZ,IAAIiB,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEtB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UAC7DC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,SAAS,CAAE;QAC5B,CAAC,CAAC;QAEF,IAAI,CAACL,SAAS,EAAE;QAEhB,IAAIE,GAAG,CAACI,EAAE,EAAE;UACR,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;UAC7BX,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC;UAC1BG,OAAO,CAACQ,IAAI,CAACT,IAAI,CAAC;UAClBH,aAAa,CAAC,IAAI,CAAC;QACvB,CAAC,MAAM;UACHA,aAAa,CAAC,KAAK,CAAC;QACxB;MACJ,CAAC,CAAC,OAAOc,GAAG,EAAE;QACVd,aAAa,CAAC,KAAK,CAAC;MACxB,CAAC,SAAS;QACN,IAAIK,SAAS,EAAEP,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACxC;IACJ,CAAC;IAEDQ,SAAS,CAAC,CAAC;;IAEX;IACA,OAAO,MAAM;MACTD,SAAS,GAAG,KAAK;IACrB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIR,SAAS,EAAE,oBAAOL,OAAA;IAAAE,QAAA,EAAG;EAAmC;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEhE;EACA,OAAOnB,UAAU,IAAIE,QAAQ,gBACvBX,KAAK,CAAC6B,YAAY,CAACzB,QAAQ,EAAE;IAAEO,QAAQ;IAAEE;EAAK,CAAC,CAAC,GAChD,IAAI,CAAC,CAAC;AAChB;AAACR,EAAA,CAlDuBF,UAAU;EAAA,QACbJ,WAAW;AAAA;AAAA+B,EAAA,GADR3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}