{"ast":null,"code":"var _jsxFileName = \"/Users/maciejjanowski/Desktop/reservationSystem/frontend/src/components/IstLoggedCheck.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n// Komponente zur Prüfung, ob der Benutzer bereits eingeloggt ist\n// Wenn ja, erfolgt eine Weiterleitung zur /myaccount-Seite\n// Wenn nicht, wird das übergebene Kind-Element (z. B. Login-Formular) gerendert\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IstLoggedCheck({\n  children\n}) {\n  _s();\n  const [isLogged, setIsLogged] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8080/auth/auth_check\", {\n          method: \"GET\",\n          credentials: \"include\"\n        });\n        if (res.status === 200) {\n          setIsLogged(true);\n        } else {\n          setIsLogged(false);\n        }\n      } catch (error) {\n        console.error(\"Auth check error:\", error);\n        setIsLogged(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Anmeldung wird \\xFCberpr\\xFCft...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return isLogged ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/myaccount\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this) : children;\n}\n_s(IstLoggedCheck, \"kxemtJDZdM6BY2lsBaJGCg5Wsps=\");\n_c = IstLoggedCheck;\nvar _c;\n$RefreshReg$(_c, \"IstLoggedCheck\");","map":{"version":3,"names":["useEffect","useState","Navigate","useNavigate","jsxDEV","_jsxDEV","IstLoggedCheck","children","_s","isLogged","setIsLogged","isLoading","setIsLoading","checkAuth","res","fetch","method","credentials","status","error","console","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/maciejjanowski/Desktop/reservationSystem/frontend/src/components/IstLoggedCheck.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n// Komponente zur Prüfung, ob der Benutzer bereits eingeloggt ist\n// Wenn ja, erfolgt eine Weiterleitung zur /myaccount-Seite\n// Wenn nicht, wird das übergebene Kind-Element (z. B. Login-Formular) gerendert\n\nexport default function IstLoggedCheck({ children }) {\n    const [isLogged, setIsLogged] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const res = await fetch(\"http://localhost:8080/auth/auth_check\", {\n                    method: \"GET\",\n                    credentials: \"include\",\n                });\n\n                if (res.status === 200) {\n                    setIsLogged(true);\n                } else {\n                    setIsLogged(false);\n                }\n            } catch (error) {\n                console.error(\"Auth check error:\", error);\n                setIsLogged(false);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        checkAuth();\n    }, []);\n\n    if (isLoading) {\n        return <p>Anmeldung wird überprüft...</p>;\n    }\n\n    return isLogged ? <Navigate to=\"/myaccount\" /> : children;\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;;AAExD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UAC7DC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACjB,CAAC,CAAC;QAEF,IAAIH,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;UACpBR,WAAW,CAAC,IAAI,CAAC;QACrB,CAAC,MAAM;UACHA,WAAW,CAAC,KAAK,CAAC;QACtB;MACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCT,WAAW,CAAC,KAAK,CAAC;MACtB,CAAC,SAAS;QACNE,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,SAAS,EAAE;IACX,oBAAON,OAAA;MAAAE,QAAA,EAAG;IAA2B;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7C;EAEA,OAAOf,QAAQ,gBAAGJ,OAAA,CAACH,QAAQ;IAACuB,EAAE,EAAC;EAAY;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAGjB,QAAQ;AAC7D;AAACC,EAAA,CAjCuBF,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}